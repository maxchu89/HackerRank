import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {
    
    static int sum (int[][] n){
        int RowSize = 6;
        int ColSize = 6;
        //HourGlass Sum Holder
        int HourSum = 0;
        //CurrentMax
        int CurrentMax = -100;
        
        for (int i = 0; i < RowSize; i++){
            for (int j = 0; j < ColSize; j++){
                if (((i + 2) < RowSize) && (j + 2) < ColSize){
                    HourSum = n[i][j] + n[i][j+1] + n[i][j+2] + n[i+1][j+1] + n[i+2][j] + n[i+2][j+1] + n[i+2][j + 2];
                    CurrentMax = java.lang.Math.max(HourSum,CurrentMax);
                }
            }
        }
    return CurrentMax;    
    }
    
    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        int[][] arr = new int[6][6];

        for (int i = 0; i < 6; i++) {
            String[] arrRowItems = scanner.nextLine().split(" ");
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            for (int j = 0; j < 6; j++) {
                int arrItem = Integer.parseInt(arrRowItems[j]);
                arr[i][j] = arrItem;
            }
        }
        int MaxHour = 0; 
        MaxHour = sum(arr);
        System.out.print(MaxHour);
        
        scanner.close();
    }
}
